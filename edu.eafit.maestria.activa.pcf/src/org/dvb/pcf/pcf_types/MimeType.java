//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.03.27 at 06:52:02 AM COT 
//


package org.dvb.pcf.pcf_types;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for mimeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="mimeType">
 *   &lt;restriction base="{http://www.dvb.org/pcf/pcf-types}string">
 *     &lt;enumeration value="text/plain"/>
 *     &lt;enumeration value="text/x-dvb-pcf"/>
 *     &lt;enumeration value="image/png"/>
 *     &lt;enumeration value="image/jpeg"/>
 *     &lt;enumeration value="image/x-mpeg-iframe"/>
 *     &lt;enumeration value="image/vnd.ms.bmp"/>
 *     &lt;enumeration value="audio/basic"/>
 *     &lt;enumeration value="audio/mpeg"/>
 *     &lt;enumeration value="video/mpeg"/>
 *     &lt;enumeration value="video/vnd.rn-realvideo"/>
 *     &lt;enumeration value="video/quicktime"/>
 *     &lt;enumeration value="multipart/mixed"/>
 *     &lt;enumeration value="multipart/related"/>
 *     &lt;enumeration value="multipart/alternative"/>
 *     &lt;enumeration value="application/octet-stream"/>
 *     &lt;enumeration value="message/external-body"/>
 *     &lt;enumeration value="nil"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "mimeType")
@XmlEnum
public enum MimeType {

    @XmlEnumValue("text/plain")
    TEXT_PLAIN("text/plain"),
    @XmlEnumValue("text/x-dvb-pcf")
    TEXT_X_DVB_PCF("text/x-dvb-pcf"),
    @XmlEnumValue("image/png")
    IMAGE_PNG("image/png"),
    @XmlEnumValue("image/jpeg")
    IMAGE_JPEG("image/jpeg"),
    @XmlEnumValue("image/x-mpeg-iframe")
    IMAGE_X_MPEG_IFRAME("image/x-mpeg-iframe"),
    @XmlEnumValue("image/vnd.ms.bmp")
    IMAGE_VND_MS_BMP("image/vnd.ms.bmp"),
    @XmlEnumValue("audio/basic")
    AUDIO_BASIC("audio/basic"),
    @XmlEnumValue("audio/mpeg")
    AUDIO_MPEG("audio/mpeg"),
    @XmlEnumValue("video/mpeg")
    VIDEO_MPEG("video/mpeg"),
    @XmlEnumValue("video/vnd.rn-realvideo")
    VIDEO_VND_RN_REALVIDEO("video/vnd.rn-realvideo"),
    @XmlEnumValue("video/quicktime")
    VIDEO_QUICKTIME("video/quicktime"),
    @XmlEnumValue("multipart/mixed")
    MULTIPART_MIXED("multipart/mixed"),
    @XmlEnumValue("multipart/related")
    MULTIPART_RELATED("multipart/related"),
    @XmlEnumValue("multipart/alternative")
    MULTIPART_ALTERNATIVE("multipart/alternative"),
    @XmlEnumValue("application/octet-stream")
    APPLICATION_OCTET_STREAM("application/octet-stream"),
    @XmlEnumValue("message/external-body")
    MESSAGE_EXTERNAL_BODY("message/external-body"),
    @XmlEnumValue("nil")
    NIL("nil");
    private final String value;

    MimeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MimeType fromValue(String v) {
        for (MimeType c: MimeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
